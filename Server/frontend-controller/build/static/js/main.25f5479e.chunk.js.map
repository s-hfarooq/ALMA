{"version":3,"sources":["services/additionalFunctions.js","App.js","index.js"],"names":["sendCommand","data","a","fetch","method","headers","body","JSON","stringify","color","response","getCommandString","option","isFade","fadeSpeed","receiverUID","functionID","returnVal","rgb","r","g","b","getAnimationString","animationNum","lightOptions","value","label","animationOptions","App","state","background","selectedOption","setGA","console","log","ReactGA","initialize","pageview","handleChange","event","setState","hex","handleChangeComplete","handleSelectChange","handleAnimationSelect","onNumChange","this","onChangeComplete","onChange","className","classNamePrefix","defaultValue","isDisabled","isLoading","isClearable","isRtl","isSearchable","name","options","min","step","style","margin","Button","variant","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25f5479e.chunk.js","sourcesContent":["// Sends command to backend API\nexport async function sendCommand(data) {\n  const response = await fetch(\"/sendCommand\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ color: data })\n  });\n  return await response;\n}\n\n// Creates command JSON string based on strip selected and current device ID\nexport function getCommandString(color, option, isFade, fadeSpeed) {\n    let receiverUID = \"\", functionID = \"\", data = [];\n\n    // Only couch can run fade command\n    if(isFade == 1 && option == \"ceiling\")\n        return;\n\n    switch (option) {\n        case \"ceiling\":\n            receiverUID = \"101FFFFF\"; // 101 = type Holonyak, FF = any location, FFF = any ID\n            functionID = \"-1\";\n            break;\n        case \"couch\":\n            receiverUID = \"10200FFF\"; // 102 = type 5050 LED controller, 00 = living room, FFF = any ID\n            functionID = (isFade == 1) ? \"3\" : \"0\";\n            break;\n        case \"hassan\":\n            receiverUID = \"10203FFF\"; // 102 = type 5050 LED controller, 03 = Hassan's room, FFF = any ID\n            functionID = (isFade == 1) ? \"3\" : \"0\";\n            break;\n        default:\n            receiverUID = \"101FFFFF\"; // 101 = type Holonyak, FF = any location, FFF = any ID\n    }\n\n    if(isFade == 0)\n        data = [color.rgb.r, color.rgb.g, color.rgb.b];\n    else\n        data = [fadeSpeed]\n\n    var returnVal = {\n        \"senderUID\": \"10000000\",\n        \"receiverUID\": receiverUID,\n        \"functionID\": functionID,\n        \"data\": data,\n    };\n\n    return JSON.stringify(returnVal);\n}\n\n// Creates animation JSON string to send to backend API\nexport function getAnimationString(animationNum) {\n    let receiverUID = \"101FFFFF\"; // 101 = type Holonyak, FF = any location, FFF = any ID\n\n    var returnVal = {\n        \"senderUID\": \"10000000\",\n        \"receiverUID\": receiverUID,\n        \"functionID\": animationNum,\n        \"data\": [ ],\n    };\n\n    return JSON.stringify(returnVal);\n}\n\n// Available light strip options to display\nexport const lightOptions = [\n    // { value: \"all\", label: \"All\", color: \"#00B8D9\" },\n    { value: \"ceiling\", label: \"Ceiling\", color: \"#00B8D9\" },\n    { value: \"couch\", label: \"Couch\", color: \"#5243AA\" },\n    { value: \"hassan\", label: \"Hassan's Room\", color: \"#5243AA\" }\n];\n\n// Available animations to display\nexport const animationOptions = [\n    { value: \"0\", label: \"blinkLeds_chase2\" },\n    { value: \"1\", label: \"colorPalette\" },\n    { value: \"2\", label: \"blinkLeds_simple\" },\n    { value: \"3\", label: \"blinkLeds_chase\" },\n    { value: \"4\", label: \"cylon\" },\n    { value: \"5\", label: \"colorTemperature\" },\n    { value: \"6\", label: \"meteorRain\" },\n    { value: \"7\", label: \"confetti\" },\n    { value: \"8\", label: \"fadeInFadeOut\" },\n    { value: \"9\", label: \"cylon2\" },\n    { value: \"10\", label: \"sparkle\" },\n    { value: \"11\", label: \"snowSparkle\" },\n    { value: \"12\", label: \"runningLights\" },\n    { value: \"13\", label: \"colorWipe\" },\n    { value: \"14\", label: \"rainbowCycle\" },\n    { value: \"15\", label: \"theaterChase\" },\n    { value: \"16\", label: \"theaterChaseRainbow\" },\n    { value: \"17\", label: \"alternatingRainbow\" },\n    { value: \"18\", label: \"advancedAlternatingRainbow\" },\n    { value: \"19\", label: \"strobe\" },\n    { value: \"20\", label: \"rave\" },\n    { value: \"21\", label: \"tara\" }\n];\n","import React from 'react';\nimport { sendCommand, getCommandString, lightOptions, animationOptions, getAnimationString } from './services/additionalFunctions'\nimport { ChromePicker } from 'react-color';\nimport Select from 'react-select';\nimport Button from 'react-bootstrap/Button';\nimport InputNumber from 'rc-input-number';\nimport ReactGA from 'react-ga';\n\nclass App extends React.Component {\n    state = {\n        background: '#fff',\n        selectedOption: { value: \"ceiling\" },\n        fadeSpeed: 50,\n        animationNum: { value: \"0\" },\n    }\n\n    // Page analytics\n    setGA = () => {\n        console.log(\"settingGA\");\n        ReactGA.initialize('UA-223462510-1');\n        ReactGA.pageview('Init page view');\n      };\n\n    componentDidMount(){\n        this.setGA();\n    }\n\n    // Runs everytime a color changes\n    handleChange = async (color, event) => {\n        this.setState({ background: color.hex });\n    }\n\n    // Set final color once colors stop changing\n    handleChangeComplete = async (color, event) => {\n        let option = this.state.selectedOption.value;\n        await sendCommand(getCommandString(color, option, 0, 0));\n    }\n\n    // Handle strip selection dropdown menu\n    handleSelectChange = selectedOption => {\n        this.setState(\n            { selectedOption },\n            () => console.log(`Option selected:`, this.state.selectedOption)\n        );\n    };\n\n    // Handle animation selection dropdown menu\n    handleAnimationSelect = animationNum => {\n        this.setState(\n            { animationNum },\n            () => console.log(`Option selected:`, this.state.animationNum)\n        );\n    };\n\n    // Handle fade speed input\n    onNumChange = fadeSpeed => {\n        this.setState({ fadeSpeed });\n    }\n\n    // Render output\n    render() {\n        return (\n            <div> <center>\n                {/* Color picker */}\n                <ChromePicker\n                    color={this.state.background}\n                    onChangeComplete={this.handleChangeComplete}\n                    onChange={this.handleChange}\n                />\n\n                <br/>\n\n                {/* Strip selector */}\n                <Select\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    defaultValue={lightOptions[0]}\n                    isDisabled={false}\n                    isLoading={false}\n                    isClearable={false}\n                    isRtl={false}\n                    isSearchable={false}\n                    name=\"color\"\n                    options={lightOptions}\n                    onChange={this.handleSelectChange}\n                />\n\n                <br/>\n\n                {/* Fade delay text box input */}\n                <InputNumber min={10}\n                    value={this.state.fadeSpeed}\n                    defaultValue={50}\n                    step={1}\n                    style={{ margin: 10 }}\n                    onChange={this.onNumChange}\n                />\n\n                {/* Fade start button */}\n                <Button variant=\"outline-dark\" onClick={async () => {\n                    // await sendCommand(\"0-0-0-3-0-\" + this.state.fadeSpeed + \"-\");\n                    await sendCommand(getCommandString(0, this.state.selectedOption.value, 1, this.state.fadeSpeed));\n                }}>Start Fade (delay above)</Button>\n\n                <br/><br/><br/>\n\n                {/* Animation selector */}\n                <Select\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    defaultValue={animationOptions[0]}\n                    isDisabled={false}\n                    isLoading={false}\n                    isClearable={false}\n                    isRtl={false}\n                    isSearchable={false}\n                    name=\"animation\"\n                    options={animationOptions}\n                    onChange={this.handleAnimationSelect}\n                />\n\n                {/* Animation start button */}\n                <Button variant=\"outline-dark\" onClick={async () => {\n                    await sendCommand(getAnimationString(this.state.animationNum.value));\n                }}>Start Ceiling Animation</Button>\n            </center> </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}